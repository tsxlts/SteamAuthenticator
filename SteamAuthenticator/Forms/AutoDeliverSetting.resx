<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>
一、开启自动接受报价、自动令牌确认
    1、在 文件-&gt;全局设置 菜单下 开启 全局自动刷新报价/确认信息 开关；
    2、在 Steam帐号右键菜单-&gt;设置 菜单下 开启 自动刷新报价/确认信息 开关，同时开启 需要自动发货平台的 自动接受报价 和 自动令牌确认 开关。

    开启以上开关后，由对方（买家）向你发起的报价，将会自动接受并令牌确认，完成自动发货；
    如果是需要你（卖家）发送报价的情况（例如C5Game平台的订单、部分ECO平台的订单），还需进行以下设置。

二、开启自动发送报价功能
    1、ECO平台订单自动发送报价：开启ECO平台订单自动发送报价功能，在 ECO帐号右键菜单-&gt;设置 菜单下 开启 自动发送报价 开关；
    2、C5Game平台订单自动发送报价：开启C5Game平台订单自动发送报价功能，在 C5Game帐号右键菜单-&gt;设置 菜单下 开启 自动发送报价 开关；
    3、BUFF平台订单暂不支持自动发送报价功能，但你可以打开BUFF网页版的个人设置页面，并勾上偏好设置中的 出售限定买家先发报价；
    4、悠悠有品平台订单暂不支持自动发送报价功能，如果是卖家发送报价的订单需要你先手动发送报价，然后才能帮你自动令牌确认，完成自动发货。</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIpqOwCLajwAjms8AJFsPRqTaz1xlWs9t5ZrPrOWbD5nl2w/E5dsPgCXbD8Al2w+AAAA
        AAAAAAAAAAAAAJFzRwCOb0EAZEMTAI5rPEmPazzGkGo8/JJqPf+Uaj3/lWs++ZZrPryXbD48lms9AJZs
        PgCWaz4AAAAAAJB3TQCRdUgAk3hNAYprPGWKaTvsimg6/4pmOf+MZjr/j2c7/5JpPP+Vaj3/lms+5JZs
        PlSVazwAlms+AJVrPQCBZkEAmn5RAJZ7T1aRdEjwhmg7/4VmO/+La0L/h2Q6/4ljOP+NZTr/kWg8/5Rq
        Pf+Vaz7nlms+RJZrPgCWaj4AlX1RAJV8USKWfFDWk3hN/5J2Tv+vmXz/uqWL/6mQcv+HZT3/h2E3/4xk
        Ov+QZzv/k2k9/5VqPcaVaz0WlWs9AJ+GWwCUfE90mYBV/6ePav/KuJ//6+DT/+vh1f/Fs53/mX5c/39b
        M/+GYDf/i2M5/49mO/+TaT39lWo9XZRqPQCzo4MEwbCQq9fJsv/x5tj/+vHm//bt4v/i1sf/0sSy/9/U
        xf+njnD/hWE6/4VeNf+LYzn/kWg8/5NqPZSSaTsA9/DlCfz057r78ub/7OHP/9HAo/+8pYL/yLWa//Lr
        4//59O7/7+fe/8q5pf+zmn7/kGtD/49mOv+TaT2foG9HAPbv4Qje0ba4x7SP/7GYav+ojFv/pYhY/6WI
        XP/WyLX/9vDq/9PEs//RwrD/08Oy/7+njv+QZzz/k2k8n59uRwCxnWsGrZZhs6uTXv+skl7/rJFe/6uP
        Xf+niln/qY9o/93Sw//Xyrr//Pj1/9fIt//Twa7/l29F/5NpPJ+gcEUAr5lhBrCZYrOwmGL/r5dh/6+V
        Yf+uk2D/rZBe/6eJWv/Rwqz/1sm4/9/Uxf/Wx7b/zLii/5VsQP+Vaz2foXNEALOeZAaynWSzsptj/7Ka
        Y/+xmGL/sJZh/7CUYP+ukF7/s5lv/9HBrP/Wybf/zryn/6J/V/+Vaz3/l2w+n5pwRAC1oWUGtZ9ktbSe
        ZP+0nGT/s5tj/7OZY/+yl2L/sZVh/6+SXv+oiFj/n35R/5ZxQv+UbT3/lm0//5dtP6GbaD4AtaFkA7Wg
        ZFi1n2SNtJ1jrbWcY9u1m2P8tJpj/7SYYv+zlmL/spRh/6uLWfqceEfWlW8/qJduP4qXbT9On2A+ALej
        ZgC3omYAuaNoAK+YXQSzm2IdtZxjYbWbY8K1m2P7tZlj+LSXYrizlGFYrYxaGZFqOQOWbj8AmG0/AJxo
        PwC1n2QAtJ1iAJmFSgCwmV8As5tiALadZAC0mmEVtptjfLWaYnGzlmAPs5VhAKyLWQCSazsAlGA3AJZw
        PwCYbj8AgAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>